<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sexy.tea.mapper.LoginLogMapper">
  <resultMap id="BaseResultMap" type="sexy.tea.model.LoginLog">
    <!--@mbg.generated generated on Sat Sep 26 15:10:16 CST 2020.-->
    <!--@Table login_log-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="device" jdbcType="VARCHAR" property="device" />
    <result column="operation_time" jdbcType="TIMESTAMP" property="operationTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated generated on Sat Sep 26 15:10:16 CST 2020.-->
    id, `uid`, username, `location`, ip, device, operation_time, `status`, create_time, 
    update_time
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated generated on Sat Sep 26 15:10:16 CST 2020.-->
    update login_log
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="`uid` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.uid,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="username = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.username,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`location` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.location,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="ip = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.ip,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="device = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.device,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="operation_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.operationTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=TINYINT}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated generated on Sat Sep 26 15:10:16 CST 2020.-->
    update login_log
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="`uid` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.uid != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.uid,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="username = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.username != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.username,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="`location` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.location != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.location,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="ip = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.ip != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.ip,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="device = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.device != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.device,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="operation_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.operationTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.operationTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.status != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=TINYINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated generated on Sat Sep 26 15:10:16 CST 2020.-->
    insert into login_log
    (`uid`, username, `location`, ip, device, operation_time, `status`, create_time, 
      update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.uid,jdbcType=INTEGER}, #{item.username,jdbcType=VARCHAR}, #{item.location,jdbcType=VARCHAR}, 
        #{item.ip,jdbcType=VARCHAR}, #{item.device,jdbcType=VARCHAR}, #{item.operationTime,jdbcType=TIMESTAMP}, 
        #{item.status,jdbcType=TINYINT}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}
        )
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="sexy.tea.model.LoginLog" useGeneratedKeys="true">
    <!--@mbg.generated generated on Sat Sep 26 15:10:16 CST 2020.-->
    insert into login_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      `uid`,
      username,
      `location`,
      ip,
      device,
      operation_time,
      `status`,
      create_time,
      update_time,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      #{uid,jdbcType=INTEGER},
      #{username,jdbcType=VARCHAR},
      #{location,jdbcType=VARCHAR},
      #{ip,jdbcType=VARCHAR},
      #{device,jdbcType=VARCHAR},
      #{operationTime,jdbcType=TIMESTAMP},
      #{status,jdbcType=TINYINT},
      #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      `uid` = #{uid,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      `location` = #{location,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      device = #{device,jdbcType=VARCHAR},
      operation_time = #{operationTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="sexy.tea.model.LoginLog" useGeneratedKeys="true">
    <!--@mbg.generated generated on Sat Sep 26 15:10:16 CST 2020.-->
    insert into login_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        `uid`,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="location != null">
        `location`,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="device != null">
        device,
      </if>
      <if test="operationTime != null">
        operation_time,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="device != null">
        #{device,jdbcType=VARCHAR},
      </if>
      <if test="operationTime != null">
        #{operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        `uid` = #{uid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        `location` = #{location,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="device != null">
        device = #{device,jdbcType=VARCHAR},
      </if>
      <if test="operationTime != null">
        operation_time = #{operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
</mapper>